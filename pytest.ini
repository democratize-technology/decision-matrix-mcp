[tool:pytest]
# Pytest configuration for decision-matrix-mcp

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for system interactions
    performance: Performance and benchmark tests
    slow: Tests that take longer than 30 seconds
    real_backends: Tests that require real LLM backend credentials
    concurrent: Tests that use concurrency/parallelism
    memory: Tests that check memory usage patterns

# Async testing configuration
asyncio_mode = auto

# Output configuration
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --durations=10
    -ra

# Filtering options
# Run only fast tests by default (exclude slow ones)
# Use: pytest -m "not slow" for fast tests only
# Use: pytest -m "slow" for slow tests only
# Use: pytest -m "integration" for integration tests only
# Use: pytest -m "performance" for performance tests only

# Coverage configuration (if pytest-cov is installed)
# addopts = --cov=decision_matrix_mcp --cov-report=html --cov-report=term-missing

# Warning configuration
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Timeout for individual tests (if pytest-timeout is installed)
# timeout = 300

# Logging configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Minimum Python version
minversion = 7.0

# Test output
console_output_style = progress