name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        
    - name: Check code formatting with Black
      run: |
        black --check --diff src/ tests/
        
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff src/ tests/
        
    - name: Lint with Ruff
      run: |
        ruff check src/ tests/
        
    - name: Check formatting with Ruff
      run: |
        ruff format --check src/ tests/
        
    - name: Type check with mypy
      run: |
        mypy src/
        
    - name: Security check with bandit
      run: |
        bandit -r src/ -f json || true
        
    - name: Check dependencies with safety
      run: |
        safety check || true
        
    - name: Check docstring style
      run: |
        pydocstyle src/ || true

  test-style-consistency:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        
    - name: Run full test suite
      run: |
        pytest tests/ -v --cov=src/decision_matrix_mcp --cov-report=xml --cov-report=term-missing
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  pre-commit-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        cache: 'pip'
        
    - name: Install pre-commit
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit
        
    - name: Cache pre-commit hooks
      uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
        
    - name: Run pre-commit hooks
      run: |
        pre-commit run --all-files --show-diff-on-failure